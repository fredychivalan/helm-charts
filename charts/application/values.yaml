## Application configuration
## https://github.com/fredychivalan/helm-charts
##

## Provide a name in place of `""`
## If the value is empty, it will use the name of the `instanceName` parameter 
## Otherwise it will use the value of `.Chart.Name`-`.Values.nameOverride`-`instanceName`
## Type: string
nameOverride: ""
## String to fully override `"application.fullname"`
## If the value is empty, it will use the name of the `instanceName` parameter 
## Otherwise it will use the value of `.Values.fullnameOverride`-`instanceName`
## Type: string
fullnameOverride: ""
## A string that allows specifying an alternative namespace where the chart's resources will be deployed. 
## If provided, the resources will be created in this namespace instead of the namespace configured in the Kubernetes context.
## Type: string
## @default `.Release.Namespace`
namespaceOverride: ""

## Globally shared configuration
##
global:
  ## This value can be used to configure hostnames, TLS certificates, and other domain-related aspects.
  ## Type: string
  domain: ""

  ## A dictionary of annotations that will be applied to all common resources deployed by the chart (e.g., Deployments, StatefulSets, Services).
  ## Type: dictionary
  commonAnotations: {}

  ## A dictionary of labels that will be applied to all common resources deployed by the chart (e.g., Deployments, StatefulSets, Services).
  ## Type: dictionary
  ## e.g:
  ## commonLabels:
  ##   app: application
  ##
  commonLabels: {}

  ## Defines the maximum number of old revisions to retain for resources that support revision history, such as Deployments and StatefulSets.
  ## Type: integer
  ## @default `5` (See [values.yaml])
  revisionHistoryLimit: 5

  ## Defines parameters related to the main application container image.
  ##
  image:
    ## The name of the image repository
    ## Type: string
    ## @default `nginx` (See [values.yaml])
    repository: nginx
    ## The specific tag of the image to use. If left empty, it often defaults to latest or is expected to be provided elsewhere.
    ## Type: string
    ## e.g:
    ## tag: "1.20.1"
    ##
    tag: ""
    ## The image pull policy. Common options are IfNotPresent, Always, and Never.
    ## Type: string
    ## @default `IfNotPresent` (See [values.yaml])
    imagePullPolicy: IfNotPresent

  ## A list of Kubernetes Secret names containing credentials to access private container registries.
  ## Type: list
  ## e.g:
  ## imagePullSecrets:
  ##   - name: "dockerhub-secret"
  ##   - name: "aws-secret"
  ##
  imagePullSecrets: []

  ## A dictionary of annotations that will be applied to the pods created by the chart.
  ## Type: dictionary
  podAnnotations: {}

  ## A dictionary of labels that will be applied to the pods created by the chart.
  ## Type: dictionary
  podLabels: {}

  ## Defines the deployment strategy for resources that support it (e.g., Deployments). Allows configuring strategies like Recreate or RollingUpdate.
  ## Type: dictionary
  ## e.g:
  ## deploymentStrategy:
  ##   type: RollingUpdate
  ##   rollingUpdate:
  ##     maxSurge: 25%
  ##     maxUnavailable: 25%
  ##
  deploymentStrategy: {}

  ## Defines the security context that will be applied to the pods and their containers. 
  ## This includes configurations like user and group IDs, capabilities, etc.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ## Type: dictionary
  ## e.g:
  ## podSecurityContext:
  ##   fsGroup: 65534
  ##   fsGroupChangePolicy: Always
  ##   runAsGroup: 65534
  ##   runAsNonRoot: true
  ##   runAsUser: 65534
  ##   seccompProfile:
  ##     type: RuntimeDefault
  ##   supplementalGroups: []
  ##   sysctls: []
  ##
  podSecurityContext: {}

  ## A list of environment variables to be injected into the application containers.
  ## Type: list
  ## e.g:
  ## env:
  ##   - name: APP_NAME
  ##     value: application
  ##
  env: []

  ## Specifies the RuntimeClass to be used to run the containers in the pods. RuntimeClass is used to select the container runtime configuration.
  ## Type: string
  runtimeClassName: ""

  ## A list of host aliases to be added to the /etc/hosts file of the pods.
  ## Type: list
  ## e.g:
  ## hostAliases:
  ##   - ip: 10.20.30.40
  ##     hostnames:
  ##     - "git.myhostname"
  ##
  hostAliases: []

  ## Specifies the name of the PriorityClass for the pods. PriorityClass is used to influence the scheduling priority of pods.
  ## Type: string
  priorityClassName: ""

  ## A dictionary of labels that will be used as a node selector to constrain which nodes in the cluster the pods can run on.
  ## Type: dictionary
  ## @default `kubernetes.io/os: linux` (See [values.yaml])
  nodeSelector:
    kubernetes.io/os: linux

  ## A list of tolerations that will be applied to the pods. Tolerations allow pods to be scheduled onto nodes with matching taints.
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  ## Type: list
  tolerations: []

  ## Defines affinity and anti-affinity rules for the pods. Allows controlling which nodes pods can run on in relation to other pods.
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ## Type: dictionary
  ## e.g:
  ## affinity:
  ##   nodeAffinity:
  ##     requiredDuringSchedulingIgnoredDuringExecution:
  ##       nodeSelectorTerms:
  ##       - matchExpressions:
  ##         - key: kubernetes.io/e2e-az-name
  ##           operator: In
  ##           values:
  ##           - e2e-az1
  ##           - e2e-az2
  ##
  affinity: {}

  ## A list of topology spread constraints that define how pods should be spread across different topology domains (e.g., nodes, zones, regions).
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/
  ## Type: list
  topologySpreadConstraints: []

## Aplication
##
application:
  ## A boolean value indicating whether the application deployment is enabled.
  ## If false, the chart might skip creating the application-related resources.
  ## Type: boolean
  ## @default `false` (See [values.yaml])
  enabled: false

  ## The name of the application. This name is often used as a prefix or label for the resources created by the chart.
  ## Type: string
  ## @default `application` (See [values.yaml])
  name: application

  ## A dictionary of annotations that will be applied to the main application resource
  ## Type: dictionary
  annotations: {}

  ## A dictionary of labels that will be applied to the main application resource
  ## Type: dictionary
  labels: {}

  ## A dictionary of annotations that will be applied to the application's pods.
  ## Type: dictionary
  podAnnotations: {}

  ## A dictionary of labels that will be applied to the application's pods.
  ## Type: dictionary
  podLabels: {}

  ## The desired number of replicas (instances) of the application.
  ## Type: integer
  ## @default `1` (See [values.yaml])
  replicaCount: 1

  ## Defines the specific deployment strategy for the application (e.g., Recreate, RollingUpdate).
  ## Overrides the global configuration if specified.
  ## Type: dictionary
  ## @default `{}` (defaults to global.deploymentStrategy)
  ## e.g:
  ## deploymentStrategy:
  ##   type: RollingUpdate
  ##   rollingUpdate:
  ##     maxSurge: 25%
  ##     maxUnavailable: 25%
  ##
  deploymentStrategy: {}

  ## Application Horizontal Pod Autoscaler
  ##
  autoscaling:
    ## A boolean value indicating whether horizontal pod autoscaling is enabled for the application.
    ## Type: boolean
    ## @default `false` (See [values.yaml])
    enabled: false
    ## The minimum number of replicas to which the application can be scaled down.
    ## Type: integer
    ## @default `1` (See [values.yaml])
    minReplicas: 1
    ## The maximum number of replicas to which the application can be scaled up.
    ## Type: integer
    ## @default `5` (See [values.yaml])
    maxReplicas: 5
    ## The target percentage of CPU utilization for which the HPA will try to maintain the average across all pods.
    ## Type: integer
    ## @default `85` (See [values.yaml])
    targetCPUUtilizationPercentage: 85
    ## The target percentage of memory utilization for which the HPA will try to maintain the average across all pods.
    ## Type: integer
    ## @default `85` (See [values.yaml])
    targetMemoryUtilizationPercentage: 85
    ## Defines scaling policies to control how the HPA scales up and down the replicas.
    ## Type: dictionary
    ## e.g:
    ## behavior:
    ##   scaleDown:
    ##    stabilizationWindowSeconds: 300
    ##    policies:
    ##     - type: Pods
    ##       value: 1
    ##       periodSeconds: 180
    ##   scaleUp:
    ##     stabilizationWindowSeconds: 300
    ##     policies:
    ##     - type: Pods
    ##       value: 2
    ##       periodSeconds: 60
    ##
    behavior: {}
    ## A list of custom metrics that the HPA will use to make scaling decisions.
    ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale
    ## Type: list
    metrics: []

  ## Application Pod Disruption Budget
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  pdb:
    ## A boolean value indicating whether a Pod Disruption Budget should be created for the application.
    ## Type: boolean
    ## @default `false` (See [values.yaml])
    enabled: false
    ## A dictionary of annotations that will be applied to the Pod Disruption Budget resource.
    ## Type: dictionary
    annotations: {}
    ## A dictionary of labels that will be used to select the pods to which the PDB will apply.
    ## Type: dictionary
    labels: {}
    ## Specifies the minimum number of pods that must be available at all times. Can be an absolute integer or a percentage (e.g., 1, 50%).
    ## Type: string
    minAvailable: ""
    ## Specifies the maximum number of pods that can be unavailable at a time. Can be an absolute integer or a percentage (e.g., 1, 50%). 
    ## Used instead of minAvailable.
    ## Type: string
    maxUnavailable: ""

  ## Defines the specific parameters for the application's container image. Overrides the global configuration if specified.
  ##
  image:
    ## The name of the application's image repository.
    ## Type: string
    ## @default `""` (defaults to global.image.repository)
    repository: ""
    ## The specific tag of the application's image to use.
    ## Type: string
    ## @default `""` (defaults to global.image.tag)
    tag: ""
    ## The image pull policy for the application's image.
    ## Type: string
    ## @default `""` (defaults to global.image.imagePullPolicy)
    imagePullPolicy: ""

  ## A list of Kubernetes Secret names specific to the application containing credentials to access private container registries.
  ## Overrides the global configuration if specified.
  ## Type: list
  ## @default `[]` (defaults to global.imagePullSecrets)
  ## e.g:
  ## imagePullSecrets:
  ##   - name: "dockerhub-secret"
  ##   - name: "aws-secret"
  ##
  imagePullSecrets: []

  ## A list of arguments to be passed to the main command of the application container.
  ## Type: list
  args: []

  ## A list of strings representing the main command to be executed in the application container.
  ## Overrides the ENTRYPOINT defined in the Dockerfile.
  ## Type: list
  command: []

  ## A list of environment variables specific to the application containers.
  ## These are combined with or override variables defined in global.env.
  ## Type: list
  ## @default `[]` (defaults to global.env)
  env: []

  ## A list of references to Kubernetes objects (like Secrets or ConfigMaps)
  ## from which environment variables can be obtained for the application containers.
  ## Type: list
  ## e.g:
  ## envFrom:
  ##   - configMapRef:
  ##       name: config-map-name
  ##   - secretRef:
  ##       name: secret-name
  ##
  envFrom: []

  ## Defines lifecycle hooks for the application containers (e.g., postStart, preStop).
  ## ref: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/
  ## Type: dictionary
  lifecycleHooks: {}

  ## Defines the liveness probe for the application container. Kubernetes uses this probe to determine if the container is alive and running.
  ## Type: dictionary
  livenessProbe: {}

  ## Defines the readiness probe for the application container. Kubernetes uses this probe to determine if the container is ready to serve traffic.
  ## Type: dictionary
  readinessProbe: {}

  ## Defines the startup probe for the application container.
  ## Kubernetes uses this probe to determine if the application within the container has started up correctly.
  ## Type: dictionary
  startupProbe: {}

  ## Defines the ports exposed by the main application container.
  ##
  containerPorts:
    ## The number of the HTTP port (or the main port) exposed by the container.
    ## Type: integer
    ## @default `80` (See [values.yaml])
    http: 80
    ## The protocol of the port (e.g., TCP, UDP).
    ## Type: string
    ## @default `TCP` (See [values.yaml])
    protocol: TCP

  ## A list of additional ports exposed by the main application container.
  ## Trype: list
  ## e.g:
  ## extraContainerPorts:
  ##   - name: myservice
  ##     containerPort: 9090
  ##
  extraContainerPorts: []

  ## Defines the resource requests and limits (CPU and memory) for the main application container.
  ## Type: dictionary
  ## e.g:
  ## resources:
  ##   limits:
  ##     memory: 256Mi
  ##   requests:
  ##     cpu: 100m
  ##     memory: 128Mi
  ##
  resources: {}

  ## Defines the specific security context for the main application container.
  ## Overrides the global.podSecurityContext configuration if specified.
  ## Type: dictionary
  ## e.g:
  ## containerSecurityContext:
  ##   allowPrivilegeEscalation: false
  ##   capabilities:
  ##     drop:
  ##       - ALL
  ##   readOnlyRootFilesystem: true 
  ##   runAsGroup: 65534
  ##   runAsNonRoot: true
  ##   runAsUser: 65534
  ## 
  containerSecurityContext: {}

  ## Indicates whether to allocate a standard input (stdin) stream to the container.
  ## Type: boolean
  ## @default `false` (See [values.yaml])
  stdin: false

  ## Indicates whether the container's stdin should remain open even for multiple connections.
  ## Type: boolean
  ## @default `false` (See [values.yaml])
  stdinOnce: false

  ## Specifies the path within the container from which Kubernetes will retrieve the container's termination message when it terminates.
  ## Type: string
  terminationMessagePath: ""

  ## Specifies how Kubernetes should obtain the container's termination message. Options are File (default) and FallbackToLogsOnError.
  ## Type: string
  terminationMessagePolicy: ""

  ## Indicates whether to allocate a pseudo-terminal (tty) to the container.
  ## Type: boolean
  ## @default `false` (See [values.yaml])
  tty: false

  ## A list of volume mounts to be applied to the main application container.
  ## Type: list
  ## e.g:
  ## volumeMounts:
  ##   - mountPath: /usr/local/bin/kubelogin
  ##     name: custom-tools
  ##     subPath: kubelogin
  ##
  volumeMounts: []

  ## Specifies the working directory for the command run in the container.
  ## Type: string
  ## e.g:
  ## workingDir: "/app"
  ##
  workingDir: ""

  ## A list of initialization containers that run before the application containers.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## Type: list
  ## e.g:
  ## initContainers:
  ##   - name: init-container
  ##     image: busybox:latest
  ##     command: ["echo", "Hello from initContainer!"]
  ##     imagePullPolicy: Always
  ##
  initContainers: []

  ## A list of additional containers to be run in the same pod as the main application container.
  ## Type: list
  ## e.g:
  ## extraContainers:
  ##   - name: extra-container
  ##     image: dockerhub/image:1.1-beta1
  ##     imagePullPolicy: Always
  ##     env:
  ##       - name: POD_NAME
  ##         valueFrom:
  ##           fieldRef:
  ##             fieldPath: metadata.name
  ##       - name: POD_NAMESPACE
  ##         valueFrom:
  ##           fieldRef:
  ##             fieldPath: metadata.namespace
  ##
  extraContainers: []

  ## Specifies the duration in seconds relative to the startTime that the pod may be active on a node before the system
  ## actively tries to terminate the pod.
  ## Type: integer
  ## @default `null` (See [values.yaml])
  activeDeadlineSeconds: null

  ## Indicates whether the service account token should be automatically mounted in the container.
  ## Type: boolean
  ## @default `null` (See [values.yaml])
  automountServiceAccountToken: null

  ## Specifies the DNS configuration for the pods.
  ## Type: dictionary
  ## e.g:
  ## dnsConfig:
  ##   nameservers:
  ##   - 1.2.3.4
  ##   searches:
  ##   - ns1.svc.cluster.local
  ##   - my.dns.search.suffix
  ##   options:
  ##   - name: ndots
  ##     value: "2"
  ##
  dnsConfig: {}

  ## Specifies the DNS policy for the pods. Common options are ClusterFirst, Default.
  ## Type: string
  dnsPolicy: ""

  ## Indicates whether to enable service-specific environment variables for the pods.
  ## Type: boolean
  ## @default `null` (See [values.yaml])
  enableServiceLinks: null

  ## A list of ephemeral containers that can be temporarily added to running pods for debugging purposes.
  ## Type: list
  ephemeralContainers: []

  ## A list of host aliases specific to the application's pods to be added to the /etc/hosts file of the pods.
  ## Overrides the global configuration if specified.
  ## Type list
  ## @default `[]` (defaults global.hostAliases)
  ## e.g:
  ## hostAliases:
  ##   - ip: 10.20.30.40
  ##     hostnames:
  ##     - "git.myhostname"
  ##
  hostAliases: []

  ## Indicates whether the containers in the pod share the host's IPC namespace.
  ## Type: boolean
  ## @default `null` (See [values.yaml])
  hostIPC: null

  ## Indicates whether the pod uses the host's network.
  ## Type: boolean
  ## @default `null` (See [values.yaml])
  hostNetwork: null

  ## Indicates whether the containers in the pod share the host's PID namespace.
  ## Type: boolean
  ## @default `null` (See [values.yaml])
  hostPID: null

  ## Indicates whether the containers in the pod share the host's user namespace.
  ## This feature is alpha and might not be available in all clusters.
  ## Type: boolean
  ## @default `null` (See [values.yaml])
  hostUsers: null

  ## Specifies the hostname of the pod.
  ## Type: string
  hostname: ""

  ## Specifies the name of the node on which the pod should run. This is a hint to the scheduler.
  ## Type: string
  nodeName: ""

  ## A dictionary of labels specific to the application's pods to be used as a node selector.
  ## Overrides the global configuration if specified.
  ## Type: dictionary
  ## @default `{}` (defaults to global.nodeSelector)
  nodeSelector: {}

  ## A list of tolerations specific to the application's pods.
  ## Overrides the global configuration if specified.
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration
  ## Type: list
  ## @default `[]` (defaults to global.tolerations)
  tolerations: []

  ## Defines affinity and anti-affinity rules specific to the application's pods.
  ## Overrides the global configuration if specified.
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node
  ## Type: dictionary
  ## @default `{}` (defaults to global.affinity)
  ## e.g:
  ## affinity:
  ##   nodeAffinity:
  ##     requiredDuringSchedulingIgnoredDuringExecution:
  ##       nodeSelectorTerms:
  ##       - matchExpressions:
  ##         - key: kubernetes.io/e2e-az-name
  ##           operator: In
  ##           values:
  ##           - e2e-az1
  ##           - e2e-az2
  ##
  affinity: {}

  ## Defines the operating system requirements for the pods.
  ## Type: dictionary
  os: {}

  ## Defines the resource overhead associated with running a pod. This feature is alpha and might not be available in all clusters.
  ## Type: dictionary
  overhead: {}

  ## Specifies the preemption policy for the pods. Options are PreemptLowerPriority (default) and Never.
  ## Type: string
  preemptionPolicy: ""

  ## Specifies the numerical priority for the pods.
  ## Type: integer
  ## @default `null` (See [values.yaml])
  priority: null

  ## Specifies the name of the PriorityClass specific to the application's pods.
  ## Overrides the global configuration if specified.
  ## Type: string
  ## @default `""` (defaults to global.priorityClassName)
  priorityClassName: ""

  ## A list of custom conditions that a pod must have before the pod is considered ready.
  ## Type: list
  readinessGates: []

  ## A list of resource claims that containers in this pod want to use. This is an alpha feature and might not be available in all clusters.
  ## Type: list
  resourceClaims: []

  ## Specifies the restart policy for all containers in the pod. Options are Always, OnFailure, Never.
  ## Type: string
  ## @default `Always` (See [values.yaml])
  restartPolicy: Always

  ## Specifies the RuntimeClass specific to the application's containers.
  ## Overrides the global configuration if specified.
  ## Type: string
  ## @default `""` (defaults to global.runtimeClassName)
  runtimeClassName: ""

  ## Specifies the name of the scheduler to use to schedule the pods.
  ## Type: string
  schedulerName: ""

  ## A list of conditions that must be removed before the pod can be scheduled. This is an alpha feature and might not be available in all clusters.
  ## Type: list
  schedulingGate: []

  ## Indicates whether all containers in the pod share a single process namespace.
  ## Type: boolean
  ## @default `null` (See [values.yaml])
  shareProcessNamespace: null

  ## Specifies the subdomain used when creating a headless service for the pods.
  ## Type: string
  subdomain: ""

  ## Specifies the number of seconds Kubernetes waits before forcefully terminating the pod.
  ## Type: integer
  ## @default `null` (See [values.yaml])
  terminationGracePeriodSeconds: null

  ## A list of topology spread constraints specific to the application's pods.
  ## Overrides the global configuration if specified.
  ## Type: list
  ## @default `[]` (defaults to global.topologySpreadConstraints)
  topologySpreadConstraints: []

  ## A list of volume definitions that can be mounted by containers in the pod.
  ## Type: list
  ## e.g:
  ## volumes:
  ##   - name: custom-volumes
  ##     emptyDir: {}
  ##
  volumes: []

  ## Application service configuration
  ##
  service:
    ## A boolean value indicating whether a Service should be created for the application.
    ## Type: boolean
    ## @default `true` (See [values.yaml])
    enabled: true
    ## A dictionary of annotations that will be applied to the Service resource.
    ## Type: dictionary
    annotations: {}
    ## A dictionary of labels that will be applied to the Service resource.
    ## Type: dictionary
    labels: {}
    ## The static IP address to be assigned to the Service. If left empty, Kubernetes will assign one automatically.
    ## Type: string
    clusterIP: ""
    ## The type of Service to be created. Common options are ClusterIP, NodePort, LoadBalancer, and ExternalName.
    ## Type: string
    ## @default `NodePort` (See [values.yaml])
    type: NodePort
    ## The name of the Service port.
    ## Type: string
    ## @default `http` (See [values.yaml])
    servicePortName: http
    ## The port on which the Service will be available within the cluster.
    ## Type: integer
    ## @default `80` (See [values.yaml])
    servicePort: 80
    ## The port on the node that will be used to expose the Service if the type is NodePort.
    ## Type: string
    nodePortHttp: ""
    ## The appProtocol for the HTTPS port of the Service.
    ## Type: string
    servicePortHttpsAppProtocol: ""
    ## Specifies the class of the LoadBalancer to be used.
    ## Type: string
    loadBalancerClass: ""
    ## The static IP address to be requested for the LoadBalancer (if the Service type is LoadBalancer).
    ## Type: string
    loadBalancerIP: ""
    ## A list of IP address ranges that will be allowed to access the LoadBalancer.
    ## Type: string
    loadBalancerSourceRanges: []
    ## A list of external IPs that are routed to one or more of the cluster nodes.
    ## Type: list
    externalIPs: []
    ## Specifies how external traffic should be routed to the local nodes or distributed evenly across all nodes. Options are Cluster and Local.
    ## Type: string
    externalTrafficPolicy: ""
    ## Specifies whether to use session affinity for the Service. Options are None and ClientIP.
    ## Type: string
    sessionAffinity: ""
    ## A list of additional ports to be exposed through the Service.
    ## Type: list
    ## e.g:
    ## additionalPorts:
    ## - name: authenticated
    ##   port: 8081
    ##   targetPort: 8081
    ##
    additionalPorts: []

  ## Application serviceAccount configuration
  ##
  serviceAccount:
    ## A boolean value indicating whether a new Service Account should be created for the application.
    ## If false, the default Service Account of the namespace will be used.
    ## Type: boolean
    ## @default `true` (See [values.yaml])
    create: true
    ## The name of the Service Account to use. If create is true and this value is empty, a default name will be generated.
    ## If create is false, the name of an existing Service Account must be specified.
    ## Type: string
    name: ""
    ## A dictionary of annotations that will be applied to the Service Account resource.
    ## Type: dictionary
    annotations: {}
    ## A dictionary of labels that will be applied to the Service Account resource.
    ## Type: dictionary
    labels: {}
    ## A boolean value indicating whether the Service Account token should be automatically mounted in the pods using this Service Account.
    ## Type: boolean
    ## @default `false` (See [values.yaml])
    automountServiceAccountToken: false

  ## Application ingress configuration
  ##
  ingress:
    ## A boolean value indicating whether an Ingress resource should be created for the application.
    ## Type: boolean
    ## @default `true` (See [values.yaml])
    enabled: false
    ## A dictionary of annotations that will be applied to the Ingress resource.
    ## These annotations are specific to the Ingress controller being used (e.g., nginx-ingress, traefik).
    ## Type: dictionary
    ## e.g:
    ## annotations:
    ##   nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    ##   nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    ##
    annotations: {}
    ## A dictionary of labels that will be applied to the Ingress resource.
    ## Type: dictionary
    labels: {}
    ## The name of the IngressClass to be used for this Ingress resource.
    ## This allows selecting a specific Ingress controller in clusters with multiple controllers.
    ## Type: string
    ingressClassName: ""
    ## The hostname (domain) through which the application will be accessed via the Ingress.
    ## Type: string
    ## @default `""` (defaults to global.domain)
    hostname: ""
    ## The URL path under the hostname to which traffic will be routed to the application's service.
    ## Type: string
    ## @default `/` (See [values.yaml])
    path: /
    ## The type of path matching that will be used for the Ingress path. Common options are ImplementationSpecific, Exact, Prefix.
    ## Type: string
    ## @default `ImplementationSpecific` (See [values.yaml])
    pathType: ImplementationSpecific
    ## A boolean value indicating whether TLS (HTTPS) should be configured for this Ingress.
    ## If true, a TLS secret is expected to be provided (usually via annotations like cert-manager.io/cluster-issuer).
    ## Type: boolean
    ## @default `false` (See [values.yaml])
    tls: false
    ## A list of additional hosts for which an Ingress rule will be created, using the same path and pathType configuration.
    ## Type: list
    ## e.g:
    ## extraHosts:
    ##   - name: api.application.com
    ##     path: /
    ##
    extraHosts: []
    ## A list of additional paths for the same hostname, which can route to different services or have different configurations.
    ## Type: list
    ## e.g:
    ## extraPaths:
    ##   - path: /*
    ##     pathType: Prefix
    ##     backend:
    ##       service:
    ##         name: ssl-redirect
    ##         port:
    ##           name: use-annotation
    ##
    extraPaths: []
    ## A list of custom and complete Ingress rules that allow for more advanced configuration,
    ## including multiple hosts and paths with different services.
    ## Type: list
    ## e.g:
    ## extraRules:
    ##   - http:
    ##       paths:
    ##       - path: /
    ##         pathType: Prefix
    ##         backend:
    ##           service:
    ##             name: '{{ include "base.instance.fullname" (dict "context" $ "instanceName" .Values.application.name ) }}'
    ##             port:
    ##               name: '{{ .Values.application.service.servicePortName }}'
    ##
    extraRules: []
    ## A list of additional TLS configurations for different hosts, allowing specifying different TLS secrets for different domains.
    ## Type: list
    ## e.g:
    ## extraTls:
    ##   - hosts:
    ##     - api.application.com
    ##     secretName: your-certificate-name
    ##
    extraTls: []

## Backend
##
backend:
  ## A boolean value indicating whether the backend deployment is enabled.
  ## If false, the chart might skip creating the backend-related resources.
  ## Type: boolean
  ## @default `false` (See [values.yaml])
  enabled: false

  ## The name of the backend. This name is often used as a prefix or label for the resources created by the chart for this component.
  ## Type: string
  ## @default `backend` (See [values.yaml])
  name: backend

  ## A dictionary of annotations that will be applied to the main backend resource
  ## Type: dictionary
  annotations: {}

  ## A dictionary of labels that will be applied to the main backend resource
  ## Type: dictionary
  labels: {}

  ## A dictionary of annotations that will be applied to the backend's pods.
  ## Type: dictionary
  podAnnotations: {}

  ## A dictionary of labels that will be applied to the backend's pods.
  ## Type: dictionary
  podLabels: {}

  ## The desired number of replicas (instances) of the backend.
  ## Type: integer
  ## @default `1` (See [values.yaml])
  replicaCount: 1

  ## Defines the specific deployment strategy for the backend (e.g., Recreate, RollingUpdate).
  ## Overrides the global configuration if specified.
  ## Type: dictionary
  ## @default `{}` (defaults to global.deploymentStrategy)
  ## e.g:
  ## deploymentStrategy:
  ##   type: RollingUpdate
  ##   rollingUpdate:
  ##     maxSurge: 25%
  ##     maxUnavailable: 25%
  ##
  deploymentStrategy: {}

  ## Backend Horizontal Pod Autoscaler
  ##
  autoscaling:
    ## A boolean value indicating whether horizontal pod autoscaling is enabled for the backend.
    ## Type: boolean
    ## @default `false` (See [values.yaml])
    enabled: false
    ## The minimum number of replicas to which the backend can be scaled down.
    ## Type: integer
    ## @default `1` (See [values.yaml])
    minReplicas: 1
    ## The maximum number of replicas to which the backend can be scaled up.
    ## Type: integer
    ## @default `5` (See [values.yaml])
    maxReplicas: 5
    ## The target percentage of CPU utilization for which the HPA will try to maintain the average across all backend pods.
    ## Type: integer
    ## @default `85` (See [values.yaml])
    targetCPUUtilizationPercentage: 85
    ## The target percentage of memory utilization for which the HPA will try to maintain the average across all backend pods.
    ## Type: integer
    ## @default `85` (See [values.yaml])
    targetMemoryUtilizationPercentage: 85
    ## Defines scaling policies to control how the HPA scales up and down the replicas of the backend.
    ## Type: dictionary
    ## e.g:
    ## behavior:
    ##   scaleDown:
    ##    stabilizationWindowSeconds: 300
    ##    policies:
    ##     - type: Pods
    ##       value: 1
    ##       periodSeconds: 180
    ##   scaleUp:
    ##     stabilizationWindowSeconds: 300
    ##     policies:
    ##     - type: Pods
    ##       value: 2
    ##       periodSeconds: 60
    ##
    behavior: {}
    ## A list of custom metrics that the HPA will use to make scaling decisions for the backend.
    ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale
    ## Type: list
    metrics: []

  ## Backend Pod Disruption Budget
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  pdb:
    ## A boolean value indicating whether a Pod Disruption Budget should be created for the backend.
    ## Type: boolean
    ## @default `false` (See [values.yaml])
    enabled: false
    ## A dictionary of annotations that will be applied to the Pod Disruption Budget resource for the backend.
    ## Type: dictionary
    annotations: {}
    ## A dictionary of labels that will be used to select the backend pods to which the PDB will apply.
    ## Type: dictionary
    labels: {}
    ## Specifies the minimum number of backend pods that must be available at all times. Can be an absolute integer or a percentage (e.g., 1, 50%).
    ## Type: string
    minAvailable: ""
    ## Specifies the maximum number of backend pods that can be unavailable at a time. Can be an absolute integer or a percentage (e.g., 1, 50%). 
    ## Used instead of minAvailable.
    ## Type: string
    maxUnavailable: ""

  ## Defines the specific parameters for the backend's container image. Overrides the global configuration if specified.
  ##
  image:
    ## The name of the backend's image repository.
    ## Type: string
    ## @default `""` (defaults to global.image.repository)
    repository: ""
    ## The specific tag of the backend's image to use.
    ## Type: string
    ## @default `""` (defaults to global.image.tag)
    tag: ""
    ## The image pull policy for the backend's image.
    ## Type: string
    ## @default `""` (defaults to global.image.imagePullPolicy)
    imagePullPolicy: ""

  ## A list of Kubernetes Secret names specific to the backend containing credentials to access private container registries.
  ## Overrides the global configuration if specified.
  ## Type: list
  ## @default `[]` (defaults to global.imagePullSecrets)
  ## e.g:
  ## imagePullSecrets:
  ##   - name: "dockerhub-secret"
  ##   - name: "aws-secret"
  ##
  imagePullSecrets: []

  ## A list of arguments to be passed to the main command of the backend container.
  ## Type: list
  args: []

  ## A list of strings representing the main command to be executed in the backend container.
  ## Overrides the ENTRYPOINT defined in the Dockerfile.
  ## Type: list
  command: []

  ## A list of environment variables specific to the backend containers.
  ## These are combined with or override variables defined in global.env.
  ## Type: list
  ## @default `[]` (defaults to global.env)
  env: []

  ## A list of references to Kubernetes objects (like Secrets or ConfigMaps)
  ## from which environment variables can be obtained for the backend containers.
  ## Type: list
  ## e.g:
  ## envFrom:
  ##   - configMapRef:
  ##       name: config-map-name
  ##   - secretRef:
  ##       name: secret-name
  ##
  envFrom: []

  ## Defines lifecycle hooks for the backend containers (e.g., postStart, preStop).
  ## ref: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/
  ## Type: dictionary
  lifecycleHooks: {}

  ## Defines the liveness probe for the backend container. Kubernetes uses this probe to determine if the container is alive and running.
  ## Type: dictionary
  livenessProbe: {}

  ## Defines the readiness probe for the backend container. Kubernetes uses this probe to determine if the container is ready to serve traffic.
  ## Type: dictionary
  readinessProbe: {}

  ## Defines the startup probe for the backend container.
  ## Kubernetes uses this probe to determine if the application within the container has started up correctly.
  ## Type: dictionary
  startupProbe: {}

  ## Defines the ports exposed by the main backend container.
  ##
  containerPorts:
    ## The number of the HTTP port (or the main port) exposed by the backend container.
    ## Type: integer
    ## @default `80` (See [values.yaml])
    http: 80
    ## The protocol of the port (e.g., TCP, UDP).
    ## Type: string
    ## @default `TCP` (See [values.yaml])
    protocol: TCP

  ## A list of additional ports exposed by the main backend container.
  ## Trype: list
  ## e.g:
  ## extraContainerPorts:
  ##   - name: myservice
  ##     containerPort: 9090
  ##
  extraContainerPorts: []

  ## Defines the resource requests and limits (CPU and memory) for the main backend container.
  ## Type: dictionary
  ## e.g:
  ## resources:
  ##   limits:
  ##     memory: 256Mi
  ##   requests:
  ##     cpu: 100m
  ##     memory: 128Mi
  ##
  resources: {}

  ## Defines the specific security context for the main backend container.
  ## Overrides the global.podSecurityContext configuration if specified.
  ## Type: dictionary
  ## e.g:
  ## containerSecurityContext:
  ##   allowPrivilegeEscalation: false
  ##   capabilities:
  ##     drop:
  ##       - ALL
  ##   readOnlyRootFilesystem: true 
  ##   runAsGroup: 65534
  ##   runAsNonRoot: true
  ##   runAsUser: 65534
  ## 
  containerSecurityContext: {}

  ## Indicates whether to allocate a standard input (stdin) stream to the container.
  ## Type: boolean
  ## @default `false` (See [values.yaml])
  stdin: false

  ## Indicates whether the container's stdin should remain open even for multiple connections.
  ## Type: boolean
  ## @default `false` (See [values.yaml])
  stdinOnce: false

  ## Specifies the path within the container from which Kubernetes will retrieve the container's termination message when it terminates.
  ## Type: string
  terminationMessagePath: ""

  ## Specifies how Kubernetes should obtain the container's termination message. Options are File (default) and FallbackToLogsOnError.
  ## Type: string
  terminationMessagePolicy: ""

  ## Indicates whether to allocate a pseudo-terminal (tty) to the container.
  ## Type: boolean
  ## @default `false` (See [values.yaml])
  tty: false

  ## A list of volume mounts to be applied to the main backend container.
  ## Type: list
  ## e.g:
  ## volumeMounts:
  ##   - mountPath: /usr/local/bin/kubelogin
  ##     name: custom-tools
  ##     subPath: kubelogin
  ##
  volumeMounts: []

  ## Specifies the working directory for the command run in the container.
  ## Type: string
  ## e.g:
  ## workingDir: "/app"
  ##
  workingDir: ""

  ## A list of initialization containers that run before the backend containers.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## Type: list
  ## e.g:
  ## initContainers:
  ##   - name: init-container
  ##     image: busybox:latest
  ##     command: ["echo", "Hello from initContainer!"]
  ##     imagePullPolicy: Always
  ##
  initContainers: []

  ## A list of additional containers to be run in the same pod as the main backend container.
  ## Type: list
  ## e.g:
  ## extraContainers:
  ##   - name: extra-container
  ##     image: dockerhub/image:1.1-beta1
  ##     imagePullPolicy: Always
  ##     env:
  ##       - name: POD_NAME
  ##         valueFrom:
  ##           fieldRef:
  ##             fieldPath: metadata.name
  ##       - name: POD_NAMESPACE
  ##         valueFrom:
  ##           fieldRef:
  ##             fieldPath: metadata.namespace
  ##
  extraContainers: []

  ## Specifies the duration in seconds relative to the startTime that the pod may be active on a node before the system
  ## actively tries to terminate the pod.
  ## Type: integer
  ## @default `null` (See [values.yaml])
  activeDeadlineSeconds: null

  ## Indicates whether the service account token should be automatically mounted in the container.
  ## Type: boolean
  ## @default `null` (See [values.yaml])
  automountServiceAccountToken: null

  ## Specifies the DNS configuration for the pods.
  ## Type: dictionary
  ## e.g:
  ## dnsConfig:
  ##   nameservers:
  ##   - 1.2.3.4
  ##   searches:
  ##   - ns1.svc.cluster.local
  ##   - my.dns.search.suffix
  ##   options:
  ##   - name: ndots
  ##     value: "2"
  ##
  dnsConfig: {}

  ## Specifies the DNS policy for the pods. Common options are ClusterFirst, Default.
  ## Type: string
  dnsPolicy: ""

  ## Indicates whether to enable service-specific environment variables for the pods.
  ## Type: boolean
  ## @default `null` (See [values.yaml])
  enableServiceLinks: null

  ## A list of ephemeral containers that can be temporarily added to running pods for debugging purposes.
  ## Type: list
  ephemeralContainers: []

  ## A list of host aliases specific to the backend's pods to be added to the /etc/hosts file of the pods.
  ## Overrides the global configuration if specified.
  ## Type list
  ## @default `[]` (defaults global.hostAliases)
  ## e.g:
  ## hostAliases:
  ##   - ip: 10.20.30.40
  ##     hostnames:
  ##     - "git.myhostname"
  ##
  hostAliases: []

  ## Indicates whether the containers in the pod share the host's IPC namespace.
  ## Type: boolean
  ## @default `null` (See [values.yaml])
  hostIPC: null

  ## Indicates whether the pod uses the host's network.
  ## Type: boolean
  ## @default `null` (See [values.yaml])
  hostNetwork: null

  ## Indicates whether the containers in the pod share the host's PID namespace.
  ## Type: boolean
  ## @default `null` (See [values.yaml])
  hostPID: null

  ## Indicates whether the containers in the pod share the host's user namespace.
  ## This feature is alpha and might not be available in all clusters.
  ## Type: boolean
  ## @default `null` (See [values.yaml])
  hostUsers: null

  ## Specifies the hostname of the pod.
  ## Type: string
  hostname: ""

  ## Specifies the name of the node on which the pod should run. This is a hint to the scheduler.
  ## Type: string
  nodeName: ""

  ## A dictionary of labels specific to the backend's pods to be used as a node selector.
  ## Overrides the global configuration if specified.
  ## Type: dictionary
  ## @default `{}` (defaults to global.nodeSelector)
  nodeSelector: {}

  ## A list of tolerations specific to the backend's pods.
  ## Overrides the global configuration if specified.
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration
  ## Type: list
  ## @default `[]` (defaults to global.tolerations)
  tolerations: []

  ## Defines affinity and anti-affinity rules specific to the backend's pods.
  ## Overrides the global configuration if specified.
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node
  ## Type: dictionary
  ## @default `{}` (defaults to global.affinity)
  ## e.g:
  ## affinity:
  ##   nodeAffinity:
  ##     requiredDuringSchedulingIgnoredDuringExecution:
  ##       nodeSelectorTerms:
  ##       - matchExpressions:
  ##         - key: kubernetes.io/e2e-az-name
  ##           operator: In
  ##           values:
  ##           - e2e-az1
  ##           - e2e-az2
  ##
  affinity: {}

  ## Defines the operating system requirements for the pods.
  ## Type: dictionary
  os: {}

  ## Defines the resource overhead associated with running a pod. This feature is alpha and might not be available in all clusters.
  ## Type: dictionary
  overhead: {}

  ## Specifies the preemption policy for the pods. Options are PreemptLowerPriority (default) and Never.
  ## Type: string
  preemptionPolicy: ""

  ## Specifies the numerical priority for the pods.
  ## Type: integer
  ## @default `null` (See [values.yaml])
  priority: null

  ## Specifies the name of the PriorityClass specific to the backend's pods.
  ## Overrides the global configuration if specified.
  ## Type: string
  ## @default `""` (defaults to global.priorityClassName)
  priorityClassName: ""

  ## A list of custom conditions that a pod must have before the pod is considered ready.
  ## Type: list
  readinessGates: []

  ## A list of resource claims that containers in this pod want to use. This is an alpha feature and might not be available in all clusters.
  ## Type: list
  resourceClaims: []

  ## Specifies the restart policy for all containers in the pod. Options are Always, OnFailure, Never.
  ## Type: string
  ## @default `Always` (See [values.yaml])
  restartPolicy: Always

  ## Specifies the RuntimeClass specific to the backend's containers.
  ## Overrides the global configuration if specified.
  ## Type: string
  ## @default `""` (defaults to global.runtimeClassName)
  runtimeClassName: ""

  ## Specifies the name of the scheduler to use to schedule the pods.
  ## Type: string
  schedulerName: ""

  ## A list of conditions that must be removed before the pod can be scheduled. This is an alpha feature and might not be available in all clusters.
  ## Type: list
  schedulingGate: []

  ## Indicates whether all containers in the pod share a single process namespace.
  ## Type: boolean
  ## @default `null` (See [values.yaml])
  shareProcessNamespace: null

  ## Specifies the subdomain used when creating a headless service for the pods.
  ## Type: string
  subdomain: ""

  ## Specifies the number of seconds Kubernetes waits before forcefully terminating the backend pod.
  ## Type: integer
  ## @default `null` (See [values.yaml])
  terminationGracePeriodSeconds: null

  ## A list of topology spread constraints specific to the backend's pods.
  ## Overrides the global configuration if specified.
  ## Type: list
  ## @default `[]` (defaults to global.topologySpreadConstraints)
  topologySpreadConstraints: []

  ## A list of volume definitions that can be mounted by containers in the backend pod.
  ## Type: list
  ## e.g:
  ## volumes:
  ##   - name: custom-volumes
  ##     emptyDir: {}
  ##
  volumes: []

  ## Backend service configuration
  ##
  service:
    ## A boolean value indicating whether a Service should be created for the backend.
    ## Type: boolean
    ## @default `true` (See [values.yaml])
    enabled: true
    ## A dictionary of annotations that will be applied to the backend's Service resource.
    ## Type: dictionary
    annotations: {}
    ## A dictionary of labels that will be applied to the backend's Service resource.
    ## Type: dictionary
    labels: {}
    ## The static IP address to be assigned to the backend's Service. If left empty, Kubernetes will assign one automatically.
    ## Type: string
    clusterIP: ""
    ## The type of Service to be created for the backend. Common options are ClusterIP, NodePort, LoadBalancer, and ExternalName.
    ## Type: string
    ## @default `NodePort` (See [values.yaml])
    type: NodePort
    ## The name of the backend's Service port.
    ## Type: string
    ## @default `http` (See [values.yaml])
    servicePortName: http
    ## The port on which the backend's Service will be available within the cluster.
    ## Type: integer
    ## @default `80` (See [values.yaml])
    servicePort: 80
    ## The port on the node that will be used to expose the backend's Service if the type is NodePort.
    ## Type: string
    nodePortHttp: ""
    ## The appProtocol for the HTTPS port of the backend's Service.
    ## Type: string
    servicePortHttpsAppProtocol: ""
    ## Specifies the class of the LoadBalancer to be used for the backend.
    ## Type: string
    loadBalancerClass: ""
    ## The static IP address to be requested for the backend's LoadBalancer (if the Service type is LoadBalancer).
    ## Type: string
    loadBalancerIP: ""
    ## A list of IP address ranges that will be allowed to access the backend's LoadBalancer.
    ## Type: string
    loadBalancerSourceRanges: []
    ## A list of external IPs that are routed to one or more of the cluster nodes for the backend.
    ## Type: list
    externalIPs: []
    ## Specifies how external traffic should be routed to the local nodes or distributed evenly across all nodes for the backend.
    ## Options are Cluster and Local.
    ## Type: string
    externalTrafficPolicy: ""
    ## Specifies whether to use session affinity for the backend's Service. Options are None and ClientIP.
    ## Type: string
    sessionAffinity: ""
    ## A list of additional ports to be exposed through the backend's Service.
    ## Type: list
    ## e.g:
    ## additionalPorts:
    ## - name: authenticated
    ##   port: 8081
    ##   targetPort: 8081
    ##
    additionalPorts: []

  ## Backend serviceAccount configuration
  ##
  serviceAccount:
    ## A boolean value indicating whether a new Service Account should be created for the backend.
    ## If false, the default Service Account of the namespace will be used.
    ## Type: boolean
    ## @default `true` (See [values.yaml])
    create: true
    ## The name of the Service Account to use for the backend. If create is true and this value is empty, a default name will be generated.
    ## If create is false, the name of an existing Service Account must be specified.
    ## Type: string
    name: ""
    ## A dictionary of annotations that will be applied to the backend's Service Account resource.
    ## Type: dictionary
    annotations: {}
    ## A dictionary of labels that will be applied to the backend's Service Account resource.
    ## Type: dictionary
    labels: {}
    ## A boolean value indicating whether the Service Account token should be automatically mounted in the backend pods using this Service Account.
    ## Type: boolean
    ## @default `false` (See [values.yaml])
    automountServiceAccountToken: false

  ## Backend ingress configuration
  ##
  ingress:
    ## A boolean value indicating whether an Ingress resource should be created for the backend.
    ## Type: boolean
    ## @default `true` (See [values.yaml])
    enabled: false
    ## A dictionary of annotations that will be applied to the backend's Ingress resource.
    ## These annotations are specific to the Ingress controller being used (e.g., nginx-ingress, traefik).
    ## Type: dictionary
    ## e.g:
    ## annotations:
    ##   nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    ##   nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    ##
    annotations: {}
    ## A dictionary of labels that will be applied to the backend's Ingress resource.
    ## Type: dictionary
    labels: {}
    ## The name of the IngressClass to be used for this backend's Ingress resource.
    ## This allows selecting a specific Ingress controller in clusters with multiple controllers.
    ## Type: string
    ingressClassName: ""
    ## The hostname (domain) through which the backend will be accessed via the Ingress.
    ## Type: string
    ## @default `""` (defaults to global.domain)
    hostname: ""
    ## The URL path under the hostname to which traffic will be routed to the backend's service.
    ## Type: string
    ## @default `/` (See [values.yaml])
    path: /
    ## The type of path matching that will be used for the backend's Ingress path. Common options are ImplementationSpecific, Exact, Prefix.
    ## Type: string
    ## @default `ImplementationSpecific` (See [values.yaml])
    pathType: ImplementationSpecific
    ## A boolean value indicating whether TLS (HTTPS) should be configured for this backend Ingress.
    ## If true, a TLS secret is expected to be provided (usually via annotations like cert-manager.io/cluster-issuer).
    ## Type: boolean
    ## @default `false` (See [values.yaml])
    tls: false
    ## A list of additional hosts for which a backend's Ingress rule will be created, using the same path and pathType configuration.
    ## Type: list
    ## e.g:
    ## extraHosts:
    ##   - name: api.backend.com
    ##     path: /
    ##
    extraHosts: []
    ## A list of additional paths for the same backend hostname, which can route to different services or have different configurations.
    ## Type: list
    ## e.g:
    ## extraPaths:
    ##   - path: /*
    ##     pathType: Prefix
    ##     backend:
    ##       service:
    ##         name: ssl-redirect
    ##         port:
    ##           name: use-annotation
    ##
    extraPaths: []
    ## A list of custom and complete Ingress rules for the backend that allow for more advanced configuration,
    ##  including multiple hosts and paths with different services.
    ## Type: list
    ## e.g:
    ## extraRules:
    ##   - http:
    ##       paths:
    ##       - path: /
    ##         pathType: Prefix
    ##         backend:
    ##           service:
    ##             name: '{{ include "base.instance.fullname" (dict "context" $ "instanceName" .Values.backend.name ) }}'
    ##             port:
    ##               name: '{{ .Values.backend.service.servicePortName }}'
    ##
    extraRules: []
    ## A list of additional TLS configurations for different backend hosts, allowing specifying different TLS secrets for different domains.
    ## Type: list
    ## e.g:
    ## extraTls:
    ##   - hosts:
    ##     - api.backend.com
    ##     secretName: your-certificate-name
    ##
    extraTls: []